// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator typegraphql {
  provider                  = "typegraphql-prisma"
  output                    = "../generated/type-graphql"
  formatGeneratedCode       = "prettier"
  omitInputFieldsByDefault  = ["createdAt", "updatedAt"]
  omitOutputFieldsByDefault = ["password"]
  useUncheckedScalarInputs  = true
  // simpleResolvers = true // generate the simple resolvers 
  emitIdAsIDType            = true
  additionalDecorators      = true
}

enum UserKind {
  NORMAL
  ADMIN
}

/// @@TypeGraphQL.type(name: "Client")
model User {
  /// @TypeGraphQL.omit(input: ["create"])
  id        String   @id @unique @default(uuid())
  email     String   @unique
  age       Int?
  /// @TypeGraphQL.omit(output: true, input: ["update", "where", "orderBy"])
  password  String
  kind      UserKind
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model Post {
  id        String   @id @unique @default(uuid())
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}
